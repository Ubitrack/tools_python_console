import sys, os
if sys.platform == 'win32':
    from enaml import winutil

from enaml.qt import QtCore, QtGui

from enaml.widgets.api import (Container, Label, Window, Field, DockArea, DockItem, MenuBar, Menu, Action,
                               ActionGroup, StatusBar, StatusItem, ToolBar, MultilineField)
from enaml.stdlib.dock_area_styles import available_styles
from enaml.layout.api import (
    HSplitLayout, VSplitLayout, TabLayout, InsertItem, hbox, vbox, spacer
)

from utinteractiveconsole.ui.ipywidget import IPythonWidget

enamldef MainToolBar(ToolBar):
    Action:
        text = '&Exit'
        triggered ::
            QtGui.QApplication.quit()


enamldef MainDockArea(DockArea): dockarea:
    attr appstate

    alias console

    layout = HSplitLayout(
        TabLayout(
            'console',
        ),
    )

    DockItem:
        name = 'console'
        title = 'Console'
        closable = False

        Container: console:
            alias ipy
            alias syslog

            constraints = [vbox(ipy, syslog, spacing=3)]

            IPythonWidget: ipy:
                context := dockarea.appstate.context

            MultilineField: syslog:
                read_only = True
                text << "\n".join(dockarea.appstate.syslog.logitems)



enamldef Main(Window): main:
    attr appstate

    alias tbar
    alias area

    Container:
        constraints = [vbox(tbar, area, spacing=0)]
        MainToolBar: tbar:
            pass
        MainDockArea: area:
            appstate := main.appstate
            dock_event ::
                print change


