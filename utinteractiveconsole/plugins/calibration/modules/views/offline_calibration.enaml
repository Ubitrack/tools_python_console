from enaml.layout.api import hbox, vbox, spacer, align
from enaml.widgets.api import (
    Container, Html, Page, PushButton,
    GroupBox, Form, Label, Field, CheckBox, ComboBox,
    MultilineField, PushButton, DockItem, MPLCanvas
)
from enaml.styling import StyleSheet, Style, Setter
from enaml.stdlib.fields import IntField, FloatField

import enaml
with enaml.imports():
    from utinteractiveconsole.plugins.calibration.views.module_templates import WizardPanel

import logging
log = logging.getLogger(__name__)



enamldef OfflineCalibrationPanel(WizardPanel):
    StyleSheet:
        Style:
            element = 'GroupBox'
            style_class = 'greyborder'
            Setter:
                field = 'border'
                value = '1px solid grey'
        Style:
            element = 'GroupBox'
            style_class = 'customborder'
            Setter:
                field = 'margin-top'
                value = '6px'
        Style:
            element = 'GroupBox'
            style_class = 'customborder'
            pseudo_element = 'title'
            Setter:
                field = 'top'
                value = '-6px'
            Setter:
                field = 'left'
                value = '5px'
        Style:
            element = 'Label'
            style_class = 'aligned_form'
            Setter:
                field = 'hug_width'
                value = 'weak'
        Style:
            element = 'IntField'
            style_class = 'aligned_form'
            Setter:
                field = 'hug_width'
                value = 'strong'
        Style:
            element = 'FloatField'
            style_class = 'aligned_form'
            Setter:
                field = 'hug_width'
                value = 'strong'

    constraints = [
        vbox(hbox(forms_ct, results_ct),
             hbox( spacer, do_reset_parameters, do_offline_calibration, do_visualize_results),
        ),
    ]

    padding = (2, 2, 2, 2)

    Container: forms_ct:
        constraints = [
            vbox(tt_params, ao_params, ja_params, ro_params, ga_params),
        ]

        hug_width = 'strong'
        padding = (2, 2, 2, 2)

        GroupBox: tt_params:
            style_class = 'greyborder customborder aligned_form'
            title = "Tooltip"
            Form: form1:
                Label:
                    text = "Sample Distance (rad)"
                FloatField:
                    value := module_controller.parameters.tt_minimal_angle_between_measurements

        GroupBox: ao_params:
            style_class = 'greyborder customborder aligned_form'
            title = "Absolute Orientation"
            Form: form2:
                Label:
                    text = "Max Distance from Origin (m)"
                FloatField:
                    value := module_controller.parameters.ao_inital_maxdistance_from_origin
                Label:
                    text = "Refinement Expand Coverage"
                FloatField:
                    value := module_controller.parameters.ao_refinement_expand_coverage
                Label:
                    text = "Sample Distance (m)"
                FloatField:
                    value := module_controller.parameters.ao_minimal_distance_between_measurements
                Label:
                    text = "Refinement Shrink Distance"
                FloatField:
                    value := module_controller.parameters.ao_refinement_shrink_distance

        GroupBox: ja_params:
            style_class = 'greyborder customborder aligned_form'
            title = "Joint-Angles Correction"
            Form: form3:
                Label:
                    text = "Sample Distance (m)"
                FloatField:
                    value := module_controller.parameters.ja_minimal_distance_between_measurements
                Label:
                    text = "Max Distance to Ref (m)"
                FloatField:
                    value := module_controller.parameters.ja_maximum_distance_to_reference
                Label:
                    text = "Refinement Shrink Distance"
                FloatField:
                    value := module_controller.parameters.ja_refinement_shrink_distance
                Label:
                    text = "Termination Condition (mean error difference)"
                FloatField:
                    value := module_controller.parameters.ja_refinement_min_difference
                Label:
                    text = "Max Iterations"
                IntField:
                    value := module_controller.parameters.ja_refinement_max_iterations

        GroupBox: ro_params:
            style_class = 'greyborder customborder aligned_form'
            title = "Reference Orientation"
            Form: form4:
                Label:
                    text = "Sample Distance (rad)"
                FloatField:
                    value := module_controller.parameters.ro_minimal_angle_between_measurements

        GroupBox: ga_params:
            style_class = 'greyborder customborder aligned_form'
            title = "Gimbal-Angles Correction"
            Form: form5:
                Label:
                    text = "Sample Distance (rad)"
                FloatField:
                    value := module_controller.parameters.ga_minimal_angle_between_measurements

    Container: results_ct:
        constraints = [
            vbox(results_grp,),
        ]

        hug_width = 'weak'
        padding = (2, 2, 2, 2)

        GroupBox: results_grp:
            style_class = 'greyborder customborder aligned_form'
            title = "Results"

            Label:
                text = "Tooltip Offset"
            Field:
                read_only = True
                text << unicode(module_controller.tooltip_calibration_result)
            Label:
                text = "Absolute Orientation"
            Field:
                read_only = True
                text << unicode(module_controller.absolute_orientation_result)
            Label:
                text = "Joint-Angle Correction"
            MultilineField:
                read_only = True
                text << unicode(module_controller.jointangles_correction_result)
            Label:
                text = "Gimbal-Angle Correction"
            MultilineField:
                read_only = True
                text << unicode(module_controller.gimbalangles_correction_result)


    PushButton: do_reset_parameters:
        text = "Reset"
        enabled << not module_controller.is_working
        clicked ::
            module_controller.do_reset_parameters()



    PushButton: do_offline_calibration:
        text = "Start Offline Calibration"
        enabled << not module_controller.is_working
        clicked ::
            module_controller.do_offline_calibration()

    PushButton: do_visualize_results:
        text = "Visualize Results"
        enabled << module_controller.has_result
        clicked ::
            module_controller.do_visualize_results()


enamldef OfflineCalibrationResultPanel(DockItem): wizard:
    title = "Offline Calibration Results"
    attr boxplot_position_errors
    attr boxplot_orientation_errors

    Container:
        constraints = [
                hbox(pos_errors, orn_errors)
            ]

        MPLCanvas: pos_errors:
            figure = boxplot_position_errors
        MPLCanvas: orn_errors:
            figure = boxplot_orientation_errors
